<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.advanced.mapper.UserMapper">
    <resultMap id="userMap" type="com.example.advanced.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
<!--    在配置一个有关联关系的显示结果集 这种配置仅限于一对一-->
    <resultMap id="userRoleMap" type="com.example.advanced.model.SysUserExtend">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <!--role相关属性-->
        <result property="sysRole.id" column="role_id"/>
        <result property="sysRole.roleName" column="role_role_name"/>
        <result property="sysRole.enabled" column="role_enabled"/>
        <result property="sysRole.createBy" column="role_create_by"/>
        <result property="sysRole.createTime" column="role_create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
<!--      第三种配置方式    -->
<!--      因为两个配置文件分别在不同的文件配置过，现在只需要配置一个关联关系即可-->
    <resultMap id="userRoleMaps" type="com.example.advanced.model.SysUserExtend" extends="userMap">
        <association property="sysRole" columnPrefix="role_"
                     resultMap="com.example.advanced.mapper.RoleMapper.roleMap"/>
    </resultMap>
    <select id="selectUserAndRoleById" resultType="com.example.advanced.model.SysUserExtend">
        SELECT u.id,
               u.user_name userName,
               u.user_password userPassword,
               u.user_email userEmail,
               u.create_time createTime,
               r.id "sysRole.id",
               r.role_name   "sysRole.roleName",
               r.enabled "sysRole.enabled",
               r.create_by   "sysRole.createBy",
               r.create_time "sysRole.createTime"
        FROM sys_user u
                 INNER JOIN sys_user_role ur ON u.id = ur.user_id
                 INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{id}
    </select>
    <select id="selectUserAndRoleByIdResultMap" resultMap="userRoleMap">
        SELECT  u.id,
                u.user_name,
                u.user_password,
                u.user_email,
                u.create_time,
                r.id role_id,
                r.role_name role_role_name,
                r.enabled role_enabled,
                r.create_by role_create_by,
                r.create_time role_create_time
        FROM sys_user u
                 INNER JOIN sys_user_role ur ON u.id = ur.user_id
                 INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{id}
    </select>
    <select id="selectUserAndRoleByIdResultMapAssocation"
            resultMap="userRoleMaps">
        SELECT  u.id,
                u.user_name,
                u.user_password,
                u.user_email,
                u.create_time,
                r.id role_id,
                r.role_name role_role_name,
                r.enabled role_enabled,
                r.create_by role_create_by,
                r.create_time role_create_time
        FROM sys_user u
                 INNER JOIN sys_user_role ur ON u.id = ur.user_id
                 INNER JOIN sys_role r ON ur.role_id = r.id
        WHERE u.id = #{id}

    </select>
<!--    嵌套查询  fetchType 懒加载-->
    <resultMap id="userRoleMapSelect" type="com.example.advanced.model.SysUserExtend" extends="userMap">
        <association property="sysRole"
                     fetchType="lazy"
                     select="com.example.advanced.mapper.RoleMapper.selectRoleById"
                     column="{id=role_id}"/>
    </resultMap>
    <select id="selectUserAndRoleByIdSelect" resultMap="userRoleMapSelect">
        SELECT  u.id,
                u.user_name,
                u.user_password,
                u.user_email,
                u.user_info,
                u.head_img,
                u.create_time,
                ur.role_id
        FROM sys_user u
                 INNER JOIN sys_user_role ur ON u.id = ur.user_id
        WHERE u.id = #{id}
    </select>
<!--    一对多配置-->
<!--    基础的都已经配置好，现在只需要配置映射关系就好了-->
    <resultMap id="userRoleListMap" type="com.example.advanced.model.SysUserListExtend" extends="userMap">
        <collection property="sysRoleList" columnPrefix="role_"
                   resultMap="com.example.advanced.mapper.RoleMapper.roleMap">
        </collection>
    </resultMap>
    <select id="selectAllUserAndRoles" resultMap="userRoleListMap">
        SELECT
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.create_time,
            r.id role_id,
            r.role_name role_role_name,
            r.enabled role_enabled,
            r.create_by role_create_by,
            r.create_time role_create_time
        FROM sys_user u
                 INNER JOIN sys_user_role ur ON u.id = ur.user_id
                 INNER JOIN sys_role r ON ur.role_id = r.id
    </select>
<!--    配置关联关系  user-role-privi   -->
    <resultMap id="userRoleListMapPrivir" type="com.example.advanced.model.SysUserListExtend" extends="userMap">
        <collection property="sysRoleList" columnPrefix="role_"
                    resultMap="com.example.advanced.mapper.RoleMapper.rolePrivilegeListMap">
        </collection>
    </resultMap>
    <select id="selectAllUserAndRolesPrivi" resultMap="userRoleListMapPrivir">
        SELECT  u.id,
                u.user_name,
                u.user_password,
                u.user_email,
                u.create_time,
                r.id role_id,
                r.role_name role_role_name,
                r.enabled role_enabled,
                r.create_by role_create_by,
                r.create_time role_create_time,
                p.id role_privilege_id,
                p.privilege_name role_privilege_privilege_name,
                p.privilege_url role_privilege_privilege_url
        FROM sys_user u
                 INNER JOIN sys_user_role ur ON u.id = ur.user_id
                 INNER JOIN sys_role r ON ur.role_id = r.id
                 INNER JOIN sys_role_privilege rp ON rp.role_id = r.id
                 INNER JOIN sys_privilege p ON p.id = rp.privilege_id
    </select>
</mapper>